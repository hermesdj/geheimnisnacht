######################################################
# 
# Here is Warhammer mod custom duel engine
#
# DUEL MODEL
#
# attributes
# hit points:   how many attacks being can suffer
#           1-?
# attack:   overall rating of character's attack power
#           0-10
# defence:  overall rating of character's toughness
#           and defence skills
#           0-10
#
##Quick Question... Will this system be able to handle Draws effectively? 
##Say that the two duelists have 1 Attack each and 5 Defence
##With my reading of how the system works, they would never be able to hurt each other
##This means the duel would go on forever.
##       -Erik
#
# All those attributes are determined when duel starts
# basing on traits, modfiers etc
#
#
# Duel is turn based, each duel turn consits of two
# duelers turns, the duel is started with 
# character with higher martial rank
#
#
# Events: 1.Trigerring event - just a template many of them
#         2.Reporting&Choice making
#         3.Init event(hidden)
#         4.Turn event(hidden)
# 
#
#
# 0-9:   Engine events
# 10-19: Triggerning events
# 20-x:  Reporting events
#
#
# TARGET LOCKING
# flags: opinion_battlefield_duel_target
# battlefield_fight = modificator for character after duel
#
######################################################

namespace = duelengine

# HIDDEN EVENTS FOR MECHANICS 
#
#
# for this event FORM = ROOT?

character_event = { # Battlefield Duel Start
    id = duelengine.0
    border = "GFX_event_normal_frame_war"
    picture = GFX_evt_battle
    
    is_triggered_only = yes
    
    trigger = {
        NOT = { has_character_modifier = battlefield_fight }
        #NOT = { culture_group = ? }
        # Avoid crossing targets
        OR = {
            AND = {
                liege = { war = yes }
                war = no
            }
            AND = {
                war = yes
                liege = { 
                    OR = {
                        war = no 
                        character = ROOT
                    }    
                }    
            }
        }
        OR = {
            AND = {
                is_ruler = yes
                war = yes
                any_playable_ruler = {
                    war_with = ROOT
                    OR = {
                        AND = {                        
                            in_battle = yes
                            at_location = ROOT
                            prisoner = no
                            is_alive = yes        
                            NOT = { character = ROOT }                        
                            #NOT = { culture_group = unoccupied_group } FIXME remember about this when we introduce ruins
                            NOT = { has_character_modifier = battlefield_fight }
                        }
                        any_realm_character = {                
                            in_battle = yes
                            at_location = ROOT
                            prisoner = no
                            is_alive = yes        
                            NOT = { character = ROOT }
                            NOT = { has_character_modifier = battlefield_fight }
                        }
                    }    
                }
            }    
            AND = {
                war = no
                liege = {
                    any_playable_ruler = {
                        war_with = PREV
                        OR = {
                            AND = {                        
                                in_battle = yes
                                at_location = ROOT
                                prisoner = no
                                is_alive = yes        
                                NOT = { character = ROOT }                        
                                NOT = { has_character_modifier = battlefield_fight }
                            }
                            any_realm_character = {                        
                                in_battle = yes
                                at_location = ROOT
                                prisoner = no
                                is_alive = yes        
                                NOT = { character = ROOT }
                                NOT = { has_character_modifier = battlefield_fight }
                            }
                        }    
                    }
                }
            }    
        }
    }
    
    weight_multiplier = {
        days = 1
        modifier = {
            factor = 0.15
        }
        # greater chance for duel of warlike races
        modifier = {
            factor = 2
            OR = {
                culture_group = orc_group
                culture_group = ogre_group
                culture_group = lizardman_group
                culture_group = beastman_group
            }
        }
        modifier = {
            factor = 1.5
            OR = {
                culture_group = hung_group
                culture_group = amazon_group
                culture_group = kurgan_group
                culture_group = norscan_group
                culture_group = dwarf_group
                culture_group = dwarf_chaos_group
            }
        }
        modifier = {
            factor = 3
            trait = duelist
        }
        modifier = {
            factor = 3
            trait = brave
        }
        modifier = {
            factor = 3
            trait = wroth
        }
        modifier = {
            factor = 0.33
            trait = craven
        }
        modifier = {
            factor = 0.33
            trait = patient
        }
    }
    
    immediate = {
        add_character_modifier = {
            name = battlefield_fight
            duration = 10
        }
        # Target lock
        if = {
            limit = { 
                war = yes
                liege = { 
                    OR = {
                        war = no 
                        character = ROOT
                    }    
                }
            }
            random_playable_ruler = {
                limit = {
                    war_with = ROOT
                    OR = {
                        AND = {                        
                            in_battle = yes
                            at_location = ROOT
                            prisoner = no
                            is_alive = yes        
                            NOT = { character = ROOT }                        
                            NOT = { has_character_modifier = battlefield_fight }
                        }
                        any_realm_character = {                        
                            in_battle = yes
                            at_location = ROOT
                            prisoner = no
                            is_alive = yes        
                            NOT = { character = ROOT }
                            #NOT = { culture_group = unoccupied_group } FIXME remember about this when we introduce ruins
                            NOT = { has_character_modifier = battlefield_fight }
                        }
                    }
                }
                if = {
                    limit = {
                        in_battle = yes
                        at_location = ROOT
                        prisoner = no
                        is_alive = yes        
                        NOT = { character = ROOT }                        
                        NOT = { has_character_modifier = battlefield_fight }
                    }
                    opinion = { who = ROOT modifier = opinion_battle_duel_target }
                    reverse_opinion = { who = ROOT modifier = opinion_battle_duel_target }
                }
                if = {
                    limit = { NOT = { has_opinion_modifier = { who = ROOT modifier = opinion_battle_duel_target } } }
                    random_realm_character = {
                        limit = {
                            in_battle = yes
                            at_location = ROOT
                            prisoner = no
                            is_alive = yes        
                            NOT = { character = ROOT }                        
                            NOT = { has_character_modifier = battlefield_fight }
                        }
                        opinion = { who = ROOT modifier = opinion_battle_duel_target }
                        reverse_opinion = { who = ROOT modifier = opinion_battle_duel_target }
                    }
                }    
            }
        }
        if = {
            limit = { 
                war = no
                liege = { war = yes }                
            }
            liege = {
                random_playable_ruler = {
                    limit = {
                        war_with = PREV
                        OR = {
                            AND = {                        
                                in_battle = yes
                                at_location = ROOT
                                prisoner = no
                                is_alive = yes        
                                NOT = { character = ROOT }                        
                                NOT = { has_character_modifier = battlefield_fight }
                            }
                            any_realm_character = {                        
                                in_battle = yes
                                at_location = ROOT
                                prisoner = no
                                is_alive = yes        
                                NOT = { character = ROOT }
                                NOT = { has_character_modifier = battlefield_fight }
                            }
                        }
                    }
                    if = {
                        limit = {
                            in_battle = yes
                            at_location = ROOT
                            prisoner = no
                            is_alive = yes        
                            NOT = { character = ROOT }                        
                            NOT = { has_character_modifier = battlefield_fight }
                        }
                        opinion = { who = ROOT modifier = opinion_battle_duel_target }
                        reverse_opinion = { who = ROOT modifier = opinion_battle_duel_target }
                    }
                    if = {
                        limit = { NOT = { has_opinion_modifier = { who = ROOT modifier = opinion_battle_duel_target } } }
                        random_realm_character = {
                            limit = {
                                in_battle = yes
                                at_location = ROOT
                                prisoner = no
                                is_alive = yes        
                                NOT = { character = ROOT }                        
                                NOT = { has_character_modifier = battlefield_fight }
                            }
                            opinion = { who = ROOT modifier = opinion_battle_duel_target }
                            reverse_opinion = { who = ROOT modifier = opinion_battle_duel_target }
                        }
                    }    
                }
            }
        }
    }
    # OPTIONS
    option = {
        # we assume that there is only one person market with opinion_battle_duel_target
        name = "EVTOPT_DUELENGINE_1A"
        if = {
            limit = { 
                war = yes
                liege = { 
                    OR = {
                        war = no 
                        character = ROOT
                    }    
                }                
            }
            random_playable_ruler = {
                limit = { 
                    war_with = ROOT
                    OR = {
                        has_opinion_modifier = { who = ROOT modifier = opinion_battle_duel_target }    
                        any_realm_character = { has_opinion_modifier = { who = ROOT modifier = opinion_battle_duel_target } }
                    }    
                }
                if = {
                    limit = { has_opinion_modifier = { who = ROOT modifier = opinion_battle_duel_target } }
                    hidden_tooltip = { character_event = { id = duelengine.1 } }
                }
                random_realm_character = {
                    limit = { 
                        has_opinion_modifier = { who = ROOT modifier = opinion_battle_duel_target }
                        NOT = { character = PREV } # random_realm_character can be the ruler itself
                    } 
                    hidden_tooltip = { character_event = { id = duelengine.1 } }
                }
            }
        }
        if = {
            limit = { 
                war = no
                liege = { war = yes }                
            }
            liege = {
                random_playable_ruler = {
                    limit = { 
                        war_with = PREV
                        OR = {
                            has_opinion_modifier = { who = ROOT modifier = opinion_battle_duel_target }    
                            any_realm_character = { has_opinion_modifier = { who = ROOT modifier = opinion_battle_duel_target } }
                        }    
                    }
                    if = {
                        limit = { has_opinion_modifier = { who = ROOT modifier = opinion_battle_duel_target } }
                        hidden_tooltip = { character_event = { id = duelengine.1  } }
                    }
                    random_realm_character = {
                        limit = { 
                            has_opinion_modifier = { who = ROOT modifier = opinion_battle_duel_target }
                            NOT = { character = PREV } # random_realm_character can be the ruler itself
                        }
                        hidden_tooltip = { character_event = { id = duelengine.1  } }
                    }
                }
            }
        }
    }
}
#
# duelengine.1 Defender(target) fight or run?
#
character_event = {
    id = duelengine.1
    desc = "EVTDESC_DUELENGINE_1"
    picture = GFX_evt_battle
    border = "GFX_event_normal_frame_war"
    is_triggered_only = yes
    
    immediate = {
        add_character_modifier = {
            name = battlefield_fight
            duration = 10
        }
        # Remove targeting information
        remove_opinion = { who = FROM modifier = opinion_battle_duel_target }
        reverse_remove_opinion = { who = FROM modifier = opinion_battle_duel_target }
    }
    
    option = {
        name = "EVTOPT_DUELENGINE_1A"
        FROM = { character_event = { id = duelengine.2 tooltip = "DUELENGINE_TOOLTIP_1A" } }
        ai_chance = {
            factor = 100
            #modifier = {
            #    factor = 2
            #    trait = poor_warrior
            #}
            #modifier = {
            #    factor = 3
            #    trait = trained_warrior
            #}
            #modifier = {
            #    factor = 6
            #    trait = skilled_warrior
            #}
            #modifier = {
            #    factor = 8
            #    trait = master_warrior
            #}
            modifier = {
                factor = 6
                trait = duelist
            }
            modifier = {
                factor = 6
                trait = brave
            }
            modifier = {
                factor = 3
                trait = proud
            }
            modifier = {
                factor = 3
                trait = wroth
            }
            modifier = {
                factor = 3
                trait = strong
            }
            modifier = {
                factor = 3
                trait = tall
            }
        }
    }
    
    option = {
        name = "EVTOPT_DUELENGINE_1B"
        hidden_tooltip = { FROM = { character_event = { id = duelengine.5 } } }        
        remove_character_modifier = battlefield_fight
        if = {
            limit = { NOT = { trait = craven } }
            random = {
                chance = 25
                add_trait = craven
                hidden_tooltip = {
                    character_event ={
                        id = 38257 #Notify FIXME
                    }
                }
            }    
        }
        morale = -0.1
        ai_chance = {
            factor = 1 #FIXME
            #modifier = {
            #    factor = 2
            #    FROM = { trait = poor_warrior }
            #}
            #modifier = {
            #    factor = 3
            #    FROM = { trait = trained_warrior }
            #}
            #modifier = {
            #    factor = 4
            #    FROM = { trait = skilled_warrior }
            #}
            #modifier = {
            #    factor = 5
            #    FROM = { trait = master_warrior }
            #}
            modifier = {
                factor = 2
                FROM = { trait = strong }
            }
            modifier = {
                factor = 2
                FROM = { trait = tall }
            }
            modifier = {
                factor = 2
                trait = craven
            }
            modifier = {
                factor = 2
                trait = paranoid
            }
            modifier = {
                factor = 2
                trait = weak
            }
            modifier = {
                factor = 2
                trait = dwarf
            }
            modifier = {
                factor = 2
                trait = hunchback
            }
            modifier = {
                factor = 2
                trait = leper
            }
            modifier = {
                factor = 2
                trait = wounded
            }
            modifier = {
                factor = 4
                trait = maimed
            }
        }
    }
}
# 
# Attacker if attack or no triggered FROM = defender (this trigger duel or no)
# ROOT = attacker
# FROM = defender
character_event = {
    id = duelengine.2
    desc = "EVTDESC_DUELENGINE_1" #the same locals
    picture = GFX_evt_battle
    border = "GFX_event_normal_frame_war"
    
    is_triggered_only = yes
    
    immediate = {
       # set stats
       FROM = { character_event = { id = duelengine.3 }}
       character_event = { id = duelengine.3 }
    }
    option = {
        name = "EVTOPT_DUELENGINE_1A" #I will crush him!
        # Begin duel
        hidden_tooltip = {
           # FIXME random person starts the fight
           # Defender starts the fight (in testing case ai)
           FROM = { character_event = { id = duelengine.4 days = 1 } }    
        }
        ai_chance = {
            factor = 100
            modifier = {
                factor = 2
                trait = poor_warrior
            }
            modifier = {
                factor = 3
                trait = trained_warrior
            }
            modifier = {
                factor = 4
                trait = skilled_warrior
            }
            modifier = {
                factor = 5
                trait = master_warrior
            }
            modifier = {
                factor = 2
                trait = brave
            }
            modifier = {
                factor = 2
                trait = proud
            }
            modifier = {
                factor = 1.5
                trait = wroth
            }
            modifier = {
                factor = 1.5
                trait = strong
            }
            modifier = {
                factor = 1.5
                trait = tall
            }
        }
    }
    # RUN from enemy!
    option = {
        name = "EVTOPT_DUELENGINE_1B" #I must run!
        hidden_tooltip = { FROM = { character_event = { id = duelengine.5 } } }
        remove_character_modifier = battlefield_fight
        if = {
            limit = { NOT = { trait = craven } }
            random = {
                chance = 25
                add_trait = craven
                hidden_tooltip = {
                    character_event ={
                        id = 38257 #Notify
                    }
                }
            }
        }
        morale = -0.1
        ai_chance = {
            factor = 100
            modifier = {
                factor = 2
                FROM = { trait = poor_warrior }
            }
            modifier = {
                factor = 3
                FROM = { trait = trained_warrior }
            }
            modifier = {
                factor = 4
                FROM = { trait = skilled_warrior }
            }
            modifier = {
                factor = 5
                FROM = { trait = master_warrior }
            }
            modifier = {
                factor = 2
                FROM = { trait = strong }
            }
            modifier = {
                factor = 2
                FROM = { trait = tall }
            }
            modifier = {
                factor = 2
                trait = craven
            }
            modifier = {
                factor = 2
                trait = paranoid
            }
            modifier = {
                factor = 2
                trait = weak
            }
            modifier = {
                factor = 2
                trait = dwarf
            }
            modifier = {
                factor = 2
                trait = hunchback
            }
            modifier = {
                factor = 2
                trait = leper
            }
            modifier = {
                factor = 2
                trait = wounded
            }
            modifier = {
                factor = 4
                trait = maimed
            }
        }
    }
}
# Set character attributes basing on traits
character_event = {
   id = duelengine.3
   hide_window = yes 
   is_triggered_only = yes

   immediate = {
       # Determine attributes 
       # first we determine basic values for each race
       # then modify it according to traits etc
       #
       # Goblinoids and halflings
       if = { 
           limit = { 
               OR = {
                   trait = creature_goblin
                   trait = creature_snotling
                   trait = creature_halfling
                   trait = creature_skink
               }
           } 
           set_variable = { which = "duel_hp" value = 5 }
           set_variable = { which = "duel_att" value = 3 }
           set_variable = { which = "duel_def" value = 3 }
       }
       # Man sized creatures
       if = { 
           limit = { 
               OR = {
                   trait = creature_human
                   trait = creature_beastman
                   trait = creature_skaven
               }
           } 
           set_variable = { which = "duel_hp" value = 7 }
           set_variable = { which = "duel_att" value = 3 }
           set_variable = { which = "duel_def" value = 4 }
       }
       # elves (they seem to be weaker however they gain martial bonus
       # so its not true at all
       if = { limit = { trait = creature_elf } 
           set_variable = { which = "duel_hp" value = 6 }
           set_variable = { which = "duel_att" value = 4 }
           set_variable = { which = "duel_def" value = 3 }
       }
       # dwarves
       if = { 
           limit = { 
               OR = {
                   trait = creature_dwarf
                   trait = creature_chaos_dwarf
               }
           } 
           set_variable = { which = "duel_hp" value = 8 }
           set_variable = { which = "duel_att" value = 3 }
           set_variable = { which = "duel_def" value = 4 }
       }
       # orcs
       if = { limit = { trait = creature_orc } 
           set_variable = { which = "duel_hp" value =  8 }
           set_variable = { which = "duel_att" value = 4 }
           set_variable = { which = "duel_def" value = 4 }
       }
       # ogres are veryy big but slow witted
       if = { limit = { trait = creature_ogre } 
           set_variable = { which = "duel_hp" value = 10 }
           set_variable = { which = "duel_att" value = 5 }
           set_variable = { which = "duel_def" value = 4 }
       }
       # Hit point bonus basing on hp
       if = {
           limit = { NOT = { health = 3.5 } }
           change_variable = { which = "duel_hp" value = -1 }
       }
       if = {
           limit = { health = 4.5 }
           change_variable = { which = "duel_hp" value = 1 }
       }
       if = {
           limit = { health = 5.5 }
           change_variable = { which = "duel_hp" value = 1 }
       }
       if = {
           limit = { health = 6.5 }
           change_variable = { which = "duel_hp" value = 1 }
       }
       # Attack, defence, hp bonus basing on martial skill
       #
       # bonus for all ranges form 0-4
       if = { 
           limit = { martial = 7 }
           change_variable = { which = "duel_hp" value = 1 }
       }
       if = { 
           limit = { martial = 9 }
           change_variable = { which = "duel_att" value = 1 }
       }
       if = { 
           limit = { martial = 11 }
           change_variable = { which = "duel_def" value = 1 }
       }
       if = { 
           limit = { martial = 13 }
           change_variable = { which = "duel_hp" value = 1 }
       }
       if = { 
           limit = { martial = 15 }
           change_variable = { which = "duel_att" value = 1 }
       }
       if = { 
           limit = { martial = 17 }
           change_variable = { which = "duel_def" value = 1 }
       }
       if = { 
           limit = { martial = 19 }
           change_variable = { which = "duel_hp" value = 1 }
       }
       if = { 
           limit = { martial = 21 }
           change_variable = { which = "duel_att" value = 1 }
       }
       if = { 
           limit = { martial = 23 }
           change_variable = { which = "duel_def" value = 1 }
       }
       if = { 
           limit = { martial = 25 }
           change_variable = { which = "duel_hp" value = 1 }
       }
       if = { 
           limit = { martial = 27 }
           change_variable = { which = "duel_att" value = 1 }
       }
       if = { 
           limit = { martial = 29 }
           change_variable = { which = "duel_def" value = 1 }
       }
       # Ok now here should be traits bonus but i left them for now
	   
	   #Positive traits
	   # Strong characters have a bonus health
	   if = { 
			limit = { trait = strong } 
			change_variable = { which = "duel_hp" value = 1 }
       }
	   # Duelist have better attack and defense
	   if = { 
			limit = { trait = duelist } 
			change_variable = { which = "duel_hp" value = 1 }
			change_variable = { which = "duel_att" value = 1 }
			change_variable = { which = "duel_def" value = 1 }
       }
	   
	   #Negative traits
	   if = { 
			limit = { trait = weak } 
			change_variable = { which = "duel_hp" value = -1 }
       }
   }    
}
# Round event
# 
# each rund the damage is done to opponent
# according to formula: 
# dmg = rand(-1,0,1,2,3) + att(attacker) - def(defender)
# 
# duel_dmg - dmg taken form enemy this round 
# character has:
# duel_att - attack 
# duel_def - defense
# duel_hp - hit points
# each round it deals "duel_dmg" (variable is set on enemy)
#
#
#Would it be possible for the duelists to focus on either attack or defence?
#So before each round you'd say "Attack!!" or "Defend!!" 
#Each option would give you a bonus to one and penalty to the other
#Just a thought to make it more engaging. 
#
#         -Erik
#
# Done
#         -Peter
#
# at first round
# FROMFROM = defender
# FROM = attacker
# ROOT = defender
character_event = {
    id = duelengine.4
    desc = "EVTDESC_DUELENGINE_4"
    #hide_window = yes
    is_triggered_only = yes
    
    immediate = {
        # determine random part of dmg
        FROM = {
            random_list = {
                20 = { FROM = { set_variable = { which = "duel_dmg" value = -1 } }}
                20 = { FROM = { set_variable = { which = "duel_dmg" value =  0 } }}
                20 = { FROM = { set_variable = { which = "duel_dmg" value =  1 } }}
                20 = { FROM = { set_variable = { which = "duel_dmg" value =  2 } }}
                20 = { FROM = { set_variable = { which = "duel_dmg" value =  3 } }}
            }
        }
        # add att of attacker
        # stance premium
        if = { 
            limit = { has_character_flag = attack_stance }   
            FROM = { change_variable = { which = "duel_dmg" value =  1 }}
        }
        if = { 
            limit = { has_character_flag = defend_stance }   
            FROM = { change_variable = { which = "duel_dmg" value = -1 }}
        }
        # usual stuff
        if = { 
            limit = { check_variable = { which = "duel_att" value =  1 } }   
            FROM = { change_variable = { which = "duel_dmg" value =  1 }}
        }
        if = { 
            limit = { check_variable = { which = "duel_att" value =  2 } }   
            FROM = { change_variable = { which = "duel_dmg" value =  1 }}
        }
        if = { 
            limit = { check_variable = { which = "duel_att" value =  3 } }   
            FROM = { change_variable = { which = "duel_dmg" value =  1 }}
        }
        if = { 
            limit = { check_variable = { which = "duel_att" value =  4 } }   
            FROM = { change_variable = { which = "duel_dmg" value =  1 }}
        }
        if = { 
            limit = { check_variable = { which = "duel_att" value =  5 } }   
            FROM = { change_variable = { which = "duel_dmg" value =  1 }}
        }
        if = { 
            limit = { check_variable = { which = "duel_att" value =  6 } }   
            FROM = { change_variable = { which = "duel_dmg" value =  1 }}
        }
        if = { 
            limit = { check_variable = { which = "duel_att" value =  7 } }   
            FROM = { change_variable = { which = "duel_dmg" value =  1 }}
        }
        if = { 
            limit = { check_variable = { which = "duel_att" value =  8 } }   
            FROM = { change_variable = { which = "duel_dmg" value =  1 }}
        }
        if = { 
            limit = { check_variable = { which = "duel_att" value =  9 } }   
            FROM = { change_variable = { which = "duel_dmg" value =  1 }}
        }
        if = { 
            limit = { check_variable = { which = "duel_att" value = 10 } }   
            FROM = { change_variable = { which = "duel_dmg" value =  1 }}
        }
        # substract the def of defender
        # stances bonus
        if = { 
            limit = { FROM = { has_character_flag = defend_stance }}
            FROM = { change_variable = { which = "duel_dmg" value = -1 }}
        }
        if = { 
            limit = { FROM = { has_character_flag = attack_stance }}
            FROM = { change_variable = { which = "duel_dmg" value =  1 }}
        }
        # usual stuff from defence
        if = { 
            limit = { FROM = {check_variable = { which = "duel_def" value =  1 }}}
            FROM = { change_variable = { which = "duel_dmg" value = -1 }}
        }
        if = { 
            limit = { FROM = {check_variable = { which = "duel_def" value =  2 }}}
            FROM = { change_variable = { which = "duel_dmg" value = -1 }}
        }
        if = { 
            limit = { FROM = {check_variable = { which = "duel_def" value =  3 }}}
            FROM = { change_variable = { which = "duel_dmg" value = -1 }}
        }
        if = { 
            limit = { FROM = {check_variable = { which = "duel_def" value =  4 }}}
            FROM = { change_variable = { which = "duel_dmg" value = -1 }}
        }
        if = { 
            limit = { FROM = {check_variable = { which = "duel_def" value =  5 }}}
            FROM = { change_variable = { which = "duel_dmg" value = -1 }}
        }
        if = { 
            limit = { FROM = {check_variable = { which = "duel_def" value =  6 }}}
            FROM = { change_variable = { which = "duel_dmg" value = -1 }}
        }
        if = { 
            limit = { FROM = {check_variable = { which = "duel_def" value =  7}}}
            FROM = { change_variable = { which = "duel_dmg" value = -1 }}
        }
        if = { 
            limit = { FROM = {check_variable = { which = "duel_def" value =  8 }}}
            FROM = { change_variable = { which = "duel_dmg" value = -1 }}
        }
        if = { 
            limit = { FROM = {check_variable = { which = "duel_def" value =  9 }}}
            FROM = { change_variable = { which = "duel_dmg" value = -1 }}
        }
        if = { 
            limit = { FROM = {check_variable = { which = "duel_def" value = 10 }}}
            FROM = { change_variable = { which = "duel_dmg" value = -1 }}
        }
        # Ok now duel_dmg has proper value which we should substract from health
        #
        # 
	# thing that prevents infinite duels (thanks erik) setting dmg to 1 if 0 (40%chance)
        if = {
            limit = { 
                NOT = { FROM = { check_variable = { which = "duel_dmg" value = 1 }}}
                random = 40
            }
            FROM = { set_variable = { which = "duel_dmg" value =  1 }} 
        }
        # applying damge
        if = {
            limit = { FROM = { check_variable = { which = "duel_dmg" value = 1 } }}  
            FROM = { change_variable = { which = "duel_hp" value = -1 } }
        }
        if = {
            limit = { FROM = { check_variable = { which = "duel_dmg" value = 2 } }}  
            FROM = { change_variable = { which = "duel_hp" value = -1 } }
        }
        if = {
            limit = { FROM = { check_variable = { which = "duel_dmg" value = 3 } }}  
            FROM = { change_variable = { which = "duel_hp" value = -1 } }
        }
        if = {
            limit = { FROM = { check_variable = { which = "duel_dmg" value = 4 } }}  
            FROM = { change_variable = { which = "duel_hp" value = -1 } }
        }
        if = {
            limit = { FROM = { check_variable = { which = "duel_dmg" value = 5 } }}  
            FROM = { change_variable = { which = "duel_hp" value = -1 } }
        }
        if = {
            limit = { FROM = { check_variable = { which = "duel_dmg" value = 6 } }}  
            FROM = { change_variable = { which = "duel_hp" value = -1 } }
        }
        if = {
            limit = { FROM = { check_variable = { which = "duel_dmg" value = 7 } }}  
            FROM = { change_variable = { which = "duel_hp" value = -1 } }
        }
        if = {
            limit = { FROM = { check_variable = { which = "duel_dmg" value = 8 } }}  
            FROM = { change_variable = { which = "duel_hp" value = -1 } }
        }
        if = {
            limit = { FROM = { check_variable = { which = "duel_dmg" value = 9 } }}  
            FROM = { change_variable = { which = "duel_hp" value = -1 } }
        }
        if = {
            limit = { FROM = { check_variable = { which = "duel_dmg" value = 10 } }}  
            FROM = { change_variable = { which = "duel_hp" value = -1 } }
        }
        if = {
            limit = { FROM = { check_variable = { which = "duel_dmg" value = 11 } }}   
            FROM = { change_variable = { which = "duel_hp" value = -1 } }
        }
        if = {
            limit = { FROM = { check_variable = { which = "duel_dmg" value = 12 } }}  
            FROM = { change_variable = { which = "duel_hp" value = -1 } }
        }
        if = {
            limit = { FROM = { check_variable = { which = "duel_dmg" value = 13 } }}  
            FROM = { change_variable = { which = "duel_hp" value = -1 } }
        }
        # 13 is the maximal dmg now (doesn't make sense to make it higher)
    }
    option = {
        name = "EVTOPT_DUELENGINE_4A"
        # ONLY ONE IF CASE SHOULD FIRE
        # Events in case of death
        trigger = { 
            # 1 or less hp points - death
            NOT = { check_variable = { which = "duel_hp" value = 1 }}
        }
        # Erik: here is decided what happens to loser
        hidden_tooltip = {
        random_list = {
            70 = { character_event = { id = duelengine.24 } } # death
            30 = { character_event = { id = duelengine.26 } } # wounded but managed to run away
        }}
        ai_chance = { factor = 1 }
    }
    option = {
        name = "EVTOPT_DUELENGINE_4B"
        # Now when dmg is done there is time to send report events
        #
        # Both people hit themselves
        trigger = { 
            check_variable = { which = "duel_hp" value = 1 }
            FROM = { check_variable = { which = "duel_dmg" value = 1 }}
            check_variable = { which = "duel_dmg" value = 1 }
        }
        character_event = { id = duelengine.20 }
        ai_chance = { factor = 1 }
    }
    option = {
        name = "EVTOPT_DUELENGINE_4C"
        # You hit your opponent
        trigger = { 
            check_variable = { which = "duel_hp" value = 1 }
            FROM = { check_variable = { which = "duel_dmg" value = 1 }}
            NOT = { check_variable = { which = "duel_dmg" value = 1 }}
        }
        character_event = { id = duelengine.21 } 
    }
    option = {   
        name = "EVTOPT_DUELENGINE_4D"
        # Your opponent hits you   
        trigger = { 
            check_variable = { which = "duel_hp" value = 1 }
            NOT = { FROM = { check_variable = { which = "duel_dmg" value = 1 }}}
            check_variable = { which = "duel_dmg" value = 1 }
        }
        character_event = { id = duelengine.22 }
        ai_chance = { factor = 1 }
    }   
    option = {
        name = "EVTOPT_DUELENGINE_4E"
        # Nobody hits
        trigger = {
            check_variable = { which = "duel_hp" value = 1 }
            NOT = { FROM = { check_variable = { which = "duel_dmg" value = 1 }}}
            NOT = { check_variable = { which = "duel_dmg" value = 1 }}
        }
        character_event = { id = duelengine.23 }
        ai_chance = { factor = 1 }
    }
}
#
# Run report 
character_event = {
    id = duelengine.5
    desc = "EVTDESC_DUELENGINE_5"
    picture = GFX_evt_battle
    border = "GFX_event_normal_frame_war"
    is_triggered_only = yes
    
    option = {
        name = "EVTOPT_DUELENGINE_5A"
        remove_character_modifier = battlefield_fight
        morale = 0.1
    }
}
# Deciding who is first is done in event triggering the duel
# This is the event triggered by some battle events etc
#
# TODO it should be right this maybe?
####################################################
#
# VISIBLE EVENTS FOR REPORTING THE DUEL
#
####################################################
#
# TEMPLATE
#
##So my understanding is that we will have several of these events each with their own unique descriptions?
##So that the reporting event isn't the same each time
##Could they be further broken down so you'll get unique report based on whether you or your opponent is a mage?
##Seems like this could make for lots of fun description writing as there are really only 6 outcomes right now
##     -Erik
#
# its easy moddable but right now 
#
#
# id = 20-x
#
# Round draw
character_event = { 
    id = duelengine.20
    desc = "EVTDESC_DUELENGINE_20"
    picture = "GFX_evt_duel1"
    border = GFX_event_normal_frame_war
    is_triggered_only = yes
  
    option = {
       name = "EVTOPT_DUELENGINE_20A"
        trigger = { NOT = { has_character_flag = defend_stance } }
        
        clr_character_flag = normal_stance
        clr_character_flag = attack_stance
        set_character_flag = defend_stance

        FROMFROM = { character_event = { id = duelengine.4 }}
        # low hp - higher chances to defend
        ai_chance = { 
            factor = 2
            modifier = {
                factor = 4
                NOT = { check_variable = { which = "duel_hp" value = 3 } }
            }
            modifier = {
                factor = 0.5
                check_variable = { which = "duel_hp" value = 5 }
            }
        }
    }
    option = {
        name = "EVTOPT_DUELENGINE_20B"
        trigger = { NOT = { has_character_flag = attack_stance } }
        
        clr_character_flag = normal_stance
        set_character_flag = attack_stance
        clr_character_flag = defend_stance

        FROMFROM = { character_event = { id = duelengine.4 }}
        # high hp - higher chances to attack
        ai_chance = { 
            factor = 2
            modifier = {
                factor = 4
                check_variable = { which = "duel_hp" value = 5 }
            } 
        }
    }
    option = {
        name = "EVTOPT_DUELENGINE_20C"
        clr_character_flag = attack_stance
        clr_character_flag = defend_stance
        clr_character_flag = normal_stance
        set_character_flag = normal_stance
        FROMFROM = { character_event = { id = duelengine.4 }}
        ai_chance = { factor = 4 }
    }
}
# Round your win
character_event = { 
    id = duelengine.21
    desc = ""
    picture = "GFX_evt_duel3"
    border = GFX_event_normal_frame_war
    is_triggered_only = yes
  
    option = {
        name = "EVTOPT_DUELENGINE_20B" #the same names
        trigger = { NOT = { has_character_flag = attack_stance } }
        
        clr_character_flag = normal_stance
        set_character_flag = attack_stance
        clr_character_flag = defend_stance

        FROMFROM = { character_event = { id = duelengine.4 }}
        # high hp - higher chances to attack
        ai_chance = { 
            factor = 2
            modifier = {
                factor = 4
                check_variable = { which = "duel_hp" value = 5 }
            } 
        }
    }
    option = {
        name = "EVTOPT_DUELENGINE_20C"
        clr_character_flag = attack_stance
        clr_character_flag = defend_stance
        clr_character_flag = normal_stance
        set_character_flag = normal_stance
        FROMFROM = { character_event = { id = duelengine.4 }}
        ai_chance = { factor = 4 }
    }
}
# Round lost
character_event = { 
    id = duelengine.22
    desc = "EVTDESC_DUELENGINE_22"
    is_triggered_only = yes
    picture = "GFX_evt_duel4"
    border = GFX_event_normal_frame_war
    
    option = {
        name = "EVTOPT_DUELENGINE_20A"
        trigger = { NOT = { has_character_flag = defend_stance } }
        
        clr_character_flag = normal_stance
        clr_character_flag = attack_stance
        set_character_flag = defend_stance

        FROMFROM = { character_event = { id = duelengine.4 }}
        # low hp - higher chances to defend
        ai_chance = { 
            factor = 2
            modifier = {
                factor = 4
                NOT = { check_variable = { which = "duel_hp" value = 3 } }
            }
            modifier = {
                factor = 0.5
                check_variable = { which = "duel_hp" value = 5 }
            }
        }
    }
    option = {
        name = "EVTOPT_DUELENGINE_20C"
        clr_character_flag = attack_stance
        clr_character_flag = defend_stance
        clr_character_flag = normal_stance
        set_character_flag = normal_stance
        FROMFROM = { character_event = { id = duelengine.4 }}
        ai_chance = { factor = 4 }
    }
}
# Round draw
character_event = { 
    id = duelengine.23
    desc = "EVTDESC_DUELENGINE_23"
    is_triggered_only = yes
    picture = "GFX_evt_duel0"
    border = GFX_event_normal_frame_war
    
    option = {
        name = "EVTOPT_DUELENGINE_20B"
        trigger = { NOT = { has_character_flag = attack_stance } }
        
        clr_character_flag = normal_stance
        set_character_flag = attack_stance
        clr_character_flag = defend_stance

        FROMFROM = { character_event = { id = duelengine.4 }}
        # high hp - higher chances to attack
        ai_chance = { 
            factor = 2
            modifier = {
                factor = 4
                check_variable = { which = "duel_hp" value = 5 }
            } 
        }
    }
    option = {
        name = "EVTOPT_DUELENGINE_20C"
        clr_character_flag = attack_stance
        clr_character_flag = defend_stance
        clr_character_flag = normal_stance
        set_character_flag = normal_stance
        FROMFROM = { character_event = { id = duelengine.4 }}
        ai_chance = { factor = 4 }
    }
}
# in case of death
#
##Should all duels be to the death?
##Maybe there should be options to capture
##Or maybe to flee if it's not going well?
#     -Erik
#
# yes i'am working on it now for testing purpose i will use death :D
# it is easy moddable
#
character_event = { 
    id = duelengine.24
    desc = "EVTDESC_DUELENGINE_24"
    is_triggered_only = yes
    picture = "GFX_evt_duel5"
    border = GFX_event_normal_frame_war
    
    option = {
        name = "EVTOPT_DUELENGINE_24A"
        morale = -0.1
        death = { death_reason = death_accident }
        FROMFROM = { character_event = { id = duelengine.25 } }
    }
}
# report the death to winner
character_event = { 
    id = duelengine.25
    desc = "EVTDESC_DUELENGINE_25"
    is_triggered_only = yes
    picture = "GFX_evt_duel5"
    border = GFX_event_normal_frame_war
    
    option = {
        name = "EVTOPT_DUELENGINE_25A"
        morale = 0.1
    }
}
# report about escape
character_event = { 
    id = duelengine.26
    desc = "EVTDESC_DUELENGINE_26"
    is_triggered_only = yes
    picture = GFX_evt_battle
    border = GFX_event_normal_frame_war
    
    option = {
        name = "EVTOPT_DUELENGINE_26A"
        random_list = { 
            60 = { add_trait = wounded }
            40 = { add_trait = maimed  }
        }
        if = {
            limit = { NOT = { trait = craven } }
            random = {
                chance = 5
                add_trait = craven
                hidden_tooltip = {
                    character_event ={
                        id = 38257 #Notify
                    }
                }
            }
        }    
        morale = -0.1
        FROMFROM = { character_event = { id = duelengine.27 } }
    }
}
# report the escape to winner
character_event = { 
    id = duelengine.27
    desc = "EVTDESC_DUELENGINE_27"
    is_triggered_only = yes
    picture = GFX_evt_battle
    border = GFX_event_normal_frame_war
    
    option = {
        name = "EVTOPT_DUELENGINE_27A"
        morale = 0.1
    }
}
